java Parser primeraPrac.py
loop
yyn:0  state:0  yychar:-1
 next yychar:270
state 0, shifting to state 7
loop
yyn:0  state:7  yychar:-1
 next yychar:260
state 7, shifting to state 3
loop
state 3, reducing 1 by rule 72 (atom : IDENTIFIER)
reduce
after reduction, shifting from state 7 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:289
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 7 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 7 to state 33
loop
yyn:0  state:33  yychar:289
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 7 to state 32
loop
yyn:0  state:32  yychar:289
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 7 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 7 to state 30
loop
yyn:0  state:30  yychar:289
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 7 to state 29
loop
yyn:0  state:29  yychar:289
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 7 to state 28
loop
yyn:0  state:28  yychar:289
state 28, shifting to state 53
loop
yyn:0  state:53  yychar:-1
 next yychar:261
state 53, shifting to state 4
loop
state 4, reducing 1 by rule 70 (atom : ENTERO)
reduce
after reduction, shifting from state 53 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:299
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 53 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 53 to state 33
loop
yyn:0  state:33  yychar:299
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 53 to state 32
loop
yyn:0  state:32  yychar:299
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 53 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 53 to state 30
loop
yyn:0  state:30  yychar:299
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 53 to state 29
loop
yyn:0  state:29  yychar:299
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 53 to state 28
loop
yyn:0  state:28  yychar:299
reduce
state 28, reducing 1 by rule 39 (comparison : expr)
reduce
after reduction, shifting from state 53 to state 82
loop
state 82, reducing 3 by rule 44 (comparison : expr LEQ comparison)
reduce
after reduction, shifting from state 7 to state 27
loop
state 27, reducing 1 by rule 38 (not_test : comparison)
reduce
after reduction, shifting from state 7 to state 26
loop
state 26, reducing 1 by rule 35 (and_test : not_test)
reduce
after reduction, shifting from state 7 to state 25
loop
yyn:0  state:25  yychar:299
reduce
state 25, reducing 1 by rule 33 (or_test : and_test)
reduce
after reduction, shifting from state 7 to state 24
loop
yyn:0  state:24  yychar:299
reduce
state 24, reducing 1 by rule 32 (test : or_test)
reduce
after reduction, shifting from state 7 to state 37
loop
yyn:0  state:37  yychar:299
state 37, shifting to state 70
loop
yyn:0  state:70  yychar:-1
 next yychar:259
state 70, shifting to state 99
loop
yyn:0  state:99  yychar:-1
 next yychar:265
state 99, shifting to state 104
loop
yyn:0  state:104  yychar:-1
 next yychar:277
state 104, shifting to state 9
loop
yyn:0  state:9  yychar:-1
 next yychar:260
state 9, shifting to state 3
loop
state 3, reducing 1 by rule 72 (atom : IDENTIFIER)
reduce
after reduction, shifting from state 9 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:300
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 9 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 9 to state 33
loop
yyn:0  state:33  yychar:300
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 9 to state 32
loop
yyn:0  state:32  yychar:300
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 9 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 9 to state 30
loop
yyn:0  state:30  yychar:300
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 9 to state 29
loop
yyn:0  state:29  yychar:300
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 9 to state 28
loop
yyn:0  state:28  yychar:300
reduce
state 28, reducing 1 by rule 39 (comparison : expr)
reduce
after reduction, shifting from state 9 to state 27
loop
state 27, reducing 1 by rule 38 (not_test : comparison)
reduce
after reduction, shifting from state 9 to state 26
loop
state 26, reducing 1 by rule 35 (and_test : not_test)
reduce
after reduction, shifting from state 9 to state 25
loop
yyn:0  state:25  yychar:300
reduce
state 25, reducing 1 by rule 33 (or_test : and_test)
reduce
after reduction, shifting from state 9 to state 24
loop
yyn:0  state:24  yychar:300
reduce
state 24, reducing 1 by rule 32 (test : or_test)
reduce
after reduction, shifting from state 9 to state 40
loop
state 40, reducing 1 by rule 30 (auxprint : test)
reduce
after reduction, shifting from state 9 to state 41
loop
yyn:0  state:41  yychar:300
reduce
state 41, reducing 2 by rule 28 (print_stmt : PRINT auxprint)
reduce
after reduction, shifting from state 104 to state 23
loop
state 23, reducing 1 by rule 24 (small_stmt : print_stmt)
reduce
after reduction, shifting from state 104 to state 21
loop
state 21, reducing 1 by rule 21 (auxsimple : small_stmt)
reduce
after reduction, shifting from state 104 to state 20
loop
yyn:0  state:20  yychar:300
state 20, shifting to state 47
loop
yyn:0  state:47  yychar:-1
 next yychar:259
state 47, shifting to state 75
loop
state 75, reducing 3 by rule 19 (simple : auxsimple PUNTOCOMA NEWLINE)
reduce
after reduction, shifting from state 104 to state 15
loop
state 15, reducing 1 by rule 10 (stmt : simple)
reduce
after reduction, shifting from state 104 to state 107
loop
state 107, reducing 1 by rule 8 (auxsuite : stmt)
reduce
after reduction, shifting from state 104 to state 108
loop
yyn:0  state:108  yychar:-1
 next yychar:260
state 108, shifting to state 3
loop
state 3, reducing 1 by rule 72 (atom : IDENTIFIER)
reduce
after reduction, shifting from state 108 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:293
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 108 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 108 to state 33
loop
yyn:0  state:33  yychar:293
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 108 to state 32
loop
yyn:0  state:32  yychar:293
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 108 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 108 to state 30
loop
yyn:0  state:30  yychar:293
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 108 to state 29
loop
yyn:0  state:29  yychar:293
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 108 to state 28
loop
yyn:0  state:28  yychar:293
reduce
state 28, reducing 1 by rule 39 (comparison : expr)
reduce
after reduction, shifting from state 108 to state 27
loop
state 27, reducing 1 by rule 38 (not_test : comparison)
reduce
after reduction, shifting from state 108 to state 26
loop
state 26, reducing 1 by rule 35 (and_test : not_test)
reduce
after reduction, shifting from state 108 to state 25
loop
yyn:0  state:25  yychar:293
reduce
state 25, reducing 1 by rule 33 (or_test : and_test)
reduce
after reduction, shifting from state 108 to state 24
loop
yyn:0  state:24  yychar:293
reduce
state 24, reducing 1 by rule 32 (test : or_test)
reduce
after reduction, shifting from state 108 to state 19
loop
yyn:0  state:19  yychar:293
state 19, shifting to state 45
loop
yyn:0  state:45  yychar:-1
 next yychar:260
state 45, shifting to state 3
loop
state 3, reducing 1 by rule 72 (atom : IDENTIFIER)
reduce
after reduction, shifting from state 45 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:280
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 45 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 45 to state 33
loop
yyn:0  state:33  yychar:280
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 45 to state 32
loop
yyn:0  state:32  yychar:280
state 32, shifting to state 63
loop
yyn:0  state:63  yychar:-1
 next yychar:261
state 63, shifting to state 4
loop
state 4, reducing 1 by rule 70 (atom : ENTERO)
reduce
after reduction, shifting from state 63 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:300
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 63 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 63 to state 33
loop
yyn:0  state:33  yychar:300
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 63 to state 32
loop
yyn:0  state:32  yychar:300
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 63 to state 92
loop
state 92, reducing 3 by rule 57 (arith_expr : term MAS arith_expr)
reduce
after reduction, shifting from state 45 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 45 to state 30
loop
yyn:0  state:30  yychar:300
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 45 to state 29
loop
yyn:0  state:29  yychar:300
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 45 to state 28
loop
yyn:0  state:28  yychar:300
reduce
state 28, reducing 1 by rule 39 (comparison : expr)
reduce
after reduction, shifting from state 45 to state 27
loop
state 27, reducing 1 by rule 38 (not_test : comparison)
reduce
after reduction, shifting from state 45 to state 26
loop
state 26, reducing 1 by rule 35 (and_test : not_test)
reduce
after reduction, shifting from state 45 to state 25
loop
yyn:0  state:25  yychar:300
reduce
state 25, reducing 1 by rule 33 (or_test : and_test)
reduce
after reduction, shifting from state 45 to state 24
loop
yyn:0  state:24  yychar:300
reduce
state 24, reducing 1 by rule 32 (test : or_test)
reduce
after reduction, shifting from state 45 to state 74
loop
state 74, reducing 3 by rule 26 (expr_stmt : test EQ test)
reduce
after reduction, shifting from state 108 to state 22
loop
state 22, reducing 1 by rule 23 (small_stmt : expr_stmt)
reduce
after reduction, shifting from state 108 to state 21
loop
state 21, reducing 1 by rule 21 (auxsimple : small_stmt)
reduce
after reduction, shifting from state 108 to state 20
loop
yyn:0  state:20  yychar:300
state 20, shifting to state 47
loop
yyn:0  state:47  yychar:-1
 next yychar:259
state 47, shifting to state 75
loop
state 75, reducing 3 by rule 19 (simple : auxsimple PUNTOCOMA NEWLINE)
reduce
after reduction, shifting from state 108 to state 15
loop
state 15, reducing 1 by rule 10 (stmt : simple)
reduce
after reduction, shifting from state 108 to state 111
loop
state 111, reducing 2 by rule 9 (auxsuite : auxsuite stmt)
reduce
after reduction, shifting from state 104 to state 108
loop
yyn:0  state:108  yychar:-1
 next yychar:277
state 108, shifting to state 9
loop
yyn:0  state:9  yychar:-1
 next yychar:260
state 9, shifting to state 3
loop
state 3, reducing 1 by rule 72 (atom : IDENTIFIER)
reduce
after reduction, shifting from state 9 to state 35
loop
yyn:0  state:35  yychar:-1
 next yychar:300
reduce
state 35, reducing 1 by rule 67 (power : atom)
reduce
after reduction, shifting from state 9 to state 34
loop
state 34, reducing 1 by rule 66 (factor : power)
reduce
after reduction, shifting from state 9 to state 33
loop
yyn:0  state:33  yychar:300
reduce
state 33, reducing 1 by rule 59 (term : factor)
reduce
after reduction, shifting from state 9 to state 32
loop
yyn:0  state:32  yychar:300
reduce
state 32, reducing 1 by rule 56 (arith_expr : term)
reduce
after reduction, shifting from state 9 to state 31
loop
state 31, reducing 1 by rule 54 (and_expr : arith_expr)
reduce
after reduction, shifting from state 9 to state 30
loop
yyn:0  state:30  yychar:300
reduce
state 30, reducing 1 by rule 52 (xor_expr : and_expr)
reduce
after reduction, shifting from state 9 to state 29
loop
yyn:0  state:29  yychar:300
reduce
state 29, reducing 1 by rule 50 (expr : xor_expr)
reduce
after reduction, shifting from state 9 to state 28
loop
yyn:0  state:28  yychar:300
reduce
state 28, reducing 1 by rule 39 (comparison : expr)
reduce
after reduction, shifting from state 9 to state 27
loop
state 27, reducing 1 by rule 38 (not_test : comparison)
reduce
after reduction, shifting from state 9 to state 26
loop
state 26, reducing 1 by rule 35 (and_test : not_test)
reduce
after reduction, shifting from state 9 to state 25
loop
yyn:0  state:25  yychar:300
reduce
state 25, reducing 1 by rule 33 (or_test : and_test)
reduce
after reduction, shifting from state 9 to state 24
loop
yyn:0  state:24  yychar:300
reduce
state 24, reducing 1 by rule 32 (test : or_test)
reduce
after reduction, shifting from state 9 to state 40
loop
state 40, reducing 1 by rule 30 (auxprint : test)
reduce
after reduction, shifting from state 9 to state 41
loop
yyn:0  state:41  yychar:300
reduce
state 41, reducing 2 by rule 28 (print_stmt : PRINT auxprint)
reduce
after reduction, shifting from state 108 to state 23
loop
state 23, reducing 1 by rule 24 (small_stmt : print_stmt)
reduce
after reduction, shifting from state 108 to state 21
loop
state 21, reducing 1 by rule 21 (auxsimple : small_stmt)
reduce
after reduction, shifting from state 108 to state 20
loop
yyn:0  state:20  yychar:300
state 20, shifting to state 47
loop
yyn:0  state:47  yychar:-1
 next yychar:259
state 47, shifting to state 75
loop
state 75, reducing 3 by rule 19 (simple : auxsimple PUNTOCOMA NEWLINE)
reduce
after reduction, shifting from state 108 to state 15
loop
state 15, reducing 1 by rule 10 (stmt : simple)
reduce
after reduction, shifting from state 108 to state 111
loop
state 111, reducing 2 by rule 9 (auxsuite : auxsuite stmt)
reduce
after reduction, shifting from state 104 to state 108
loop
yyn:0  state:108  yychar:-1
 next yychar:264
state 108, shifting to state 110
loop
state 110, reducing 4 by rule 7 (suite : NEWLINE INDENT auxsuite DEDENT)
reduce
after reduction, shifting from state 70 to state 100
loop
state 100, reducing 4 by rule 18 (while_stmt : WHILE test DOBLEPUNTO suite)
reduce
after reduction, shifting from state 0 to state 18
loop
state 18, reducing 1 by rule 13 (compound_stmt : while_stmt)
reduce
after reduction, shifting from state 0 to state 16
loop
state 16, reducing 1 by rule 11 (stmt : compound_stmt)
reduce
after reduction, shifting from state 0 to state 14
loop
state 14, reducing 1 by rule 4 (fi : stmt)
reduce
after reduction, shifting from state 0 to state 13
loop
yyn:0  state:13  yychar:-1
 next yychar:0
reduce
state 13, reducing 1 by rule 2 (input : fi)
Llegue a input
*****************************
------------Accept-----------
While:(

Izq[
Soy un identificador.  : x
]
<=
Der[
Soy hoja entera: class IntLeaf : 100
]
){
PrintNode: 
Soy un identificador.  : x
Nodo XPR_STMT :

Izq[
Soy un identificador.  : x
]
=
Der[
Nodo Arith :

Izq[
Soy un identificador.  : x
]
+
Der[
Soy hoja entera: class IntLeaf : 1
]
]
PrintNode: 
Soy un identificador.  : z
}
------------Print-----------
--------------------------Arbol---------------------
      ( While )      
  (Cmp:<=)    (SStmtNode: PrintNode: Id:xSStmtNode: Id:x = Ar:+SStmtNode: PrintNode: Id:z)  
(Id:x)(I:100)(    )(    )
----------------------------------------------------
*****************************
reduce
After reduction, shifting from state 0 to state 12
